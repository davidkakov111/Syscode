services:
  # Postgres db service 
  postgres:
    container_name: postgres
    image: postgres:16.0
    ports:
      - "5434:5432"
    restart: always
    networks:
      - syscode-network-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5
      timeout: 5s

  # Liquibase service to set up the db 
  liquibase-a:
    container_name: liquibase-a
    image: liquibase/liquibase
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - syscode-network-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./src/main/resources/db/changelog/db.changelog-master.xml:/liquibase/db.changelog-master.xml
    command: liquibase --url=jdbc:postgresql://postgres:5432/${POSTGRES_DB} --driver=org.postgresql.Driver --username=${POSTGRES_USER} --password=${POSTGRES_PASSWORD} --changeLogFile=db.changelog-master.xml update

  # Application service
  syscode-a:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    restart: always
    networks:
      - syscode-network-2
    depends_on:
      postgres:
        condition: service_healthy
      liquibase-a:
        condition: service_completed_successfully
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      AUTH_NAME: ${AUTH_NAME}
      AUTH_PASSWORD: ${AUTH_PASSWORD}
      DISABLE_AUTH: ${DISABLE_AUTH}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  # Service to save random address data to the db by default
  random-data:
    build:
      context: .
      dockerfile: Dockerfile
    command: node src/insertRandomData.js
    depends_on:
      syscode-a:
        condition: service_healthy
    restart: "no"
    networks:
      - syscode-network-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      AUTH_NAME: ${AUTH_NAME}
      AUTH_PASSWORD: ${AUTH_PASSWORD}
      DISABLE_AUTH: ${DISABLE_AUTH}

  # Test service
  test-a:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      syscode-a:
        condition: service_healthy
      random-data:
        condition: service_completed_successfully
    restart: "no"
    networks:
      - syscode-network-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      AUTH_NAME: ${AUTH_NAME}
      AUTH_PASSWORD: ${AUTH_PASSWORD}
      DISABLE_AUTH: true

networks:
  syscode-network-2:
    driver: bridge

volumes:
  pgdata:
